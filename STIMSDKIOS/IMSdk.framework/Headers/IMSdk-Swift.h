#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef IMSDK_SWIFT_H
#define IMSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AsyncDisplayKit;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuickLook;
@import UIKit;
#endif

#import <IMSdk/IMSdk.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="IMSdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)



SWIFT_CLASS("_TtC5IMSdk5Async")
@interface Async : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC5IMSdk11AvatarModel")
@interface AvatarModel : NSObject
@property (nonatomic, copy) NSString * _Nullable bucketId;
@property (nonatomic, copy) NSString * _Nullable file_type;
@property (nonatomic) NSInteger height;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic) NSInteger width;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getFileName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLocalAvatar SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getRemoteAvatar SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOriginalImagePath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppletsBannerImagePathWithObjId:(NSString * _Nonnull)objId fileType:(NSString * _Nonnull)fileType SWIFT_WARN_UNUSED_RESULT;
@end

@class BrowserVo;

SWIFT_PROTOCOL("_TtP5IMSdk15BrowserProtocol_")
@protocol BrowserProtocol
- (void)nextStep;
- (void)previousStep;
- (void)allDatasWithBlock:(void (^ _Nonnull)(NSArray<BrowserVo *> * _Nonnull))block;
- (void)currentAttachmentWithBlock:(void (^ _Nonnull)(BrowserVo * _Nonnull))block;
- (void)nextAttachmentWithBlock:(void (^ _Nonnull)(BrowserVo * _Nonnull))block;
- (void)previousAttachmentWithBlock:(void (^ _Nonnull)(BrowserVo * _Nonnull))block;
- (void)totalCountWithBlock:(void (^ _Nonnull)(NSInteger))block;
- (void)currentPageNumberWithBlock:(void (^ _Nonnull)(NSInteger))block;
- (void)hasNextWithBlock:(void (^ _Nonnull)(BOOL))block;
- (void)hasPreviousWithBlock:(void (^ _Nonnull)(BOOL))block;
- (NSString * _Nonnull)originalPathWithBrowserVo:(BrowserVo * _Nonnull)browserVo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)normalPathWithBrowserVo:(BrowserVo * _Nonnull)browserVo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)thumPathWithBrowserVo:(BrowserVo * _Nonnull)browserVo SWIFT_WARN_UNUSED_RESULT;
- (void)forwardCurrent;
@end


SWIFT_CLASS("_TtC5IMSdk9BrowserVo")
@interface BrowserVo : NSObject
@property (nonatomic, strong) AvatarModel * _Nonnull attachment;
@property (nonatomic, strong) AvatarModel * _Nonnull posterAttachment;
@property (nonatomic) NSInteger isOrigin;
@property (nonatomic) NSInteger size;
@property (nonatomic) NSInteger duration;
@property (nonatomic) NSInteger attachmentType;
@property (nonatomic) BOOL isGif;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk10ButtonItem")
@interface ButtonItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk8ButtonVo")
@interface ButtonVo : NSObject
@property (nonatomic, copy) NSString * _Nonnull txt;
@property (nonatomic, copy) NSString * _Nonnull enableColor;
@property (nonatomic, copy) NSString * _Nonnull disableColor;
@property (nonatomic, copy) NSString * _Nonnull buttonId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk11CardMessage")
@interface CardMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class FilePreView;
@class TMImageBrowserView;
@class UIView;

SWIFT_PROTOCOL("_TtP5IMSdk12ChatDelegate_")
@protocol ChatDelegate <NSObject>
@optional
- (void)onFileMessageClickWithAMid:(NSString * _Nonnull)aMid preView:(FilePreView * _Nonnull)preView;
- (void)onImageMessageClickWithPreView:(TMImageBrowserView * _Nonnull)preView;
- (void)onCardMessageClickWithAMid:(NSString * _Nonnull)aMid buttonId:(NSString * _Nonnull)buttonId;
- (void)onMiddleMessageClickWithAMid:(NSString * _Nonnull)aMid tmpId:(NSString * _Nonnull)tmpId buttonId:(NSString * _Nonnull)buttonId;
- (void)onNoticeMessageClickWithAMid:(NSString * _Nonnull)aMid buttonId:(NSString * _Nonnull)buttonId;
- (void)getMessageUnReadCountWithCount:(NSInteger)count;
- (void)getCustomViewWithAMid:(NSString * _Nonnull)aMid body:(NSString * _Nonnull)body handleCustomView:(void (^ _Nullable)(UIView * _Nonnull))handleCustomView tapCustomView:(void (^ _Nullable)(UIView * _Nonnull))tapCustomView;
@end

@class UIImageView;
@class NSCoder;

SWIFT_CLASS("_TtC5IMSdk15ChatLoadingView")
@interface ChatLoadingView : UIView
@property (nonatomic, readonly, strong) UIImageView * _Nonnull loadingImageView;
@property (nonatomic) CFTimeInterval duration;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)startAnimating;
- (void)stopAnimating;
@end


SWIFT_CLASS("_TtC5IMSdk8ChatView")
@interface ChatView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setDelegateWithDelegate:(id <ChatDelegate> _Nonnull)delegate;
- (void)setTableViewContentInsetWithInset:(UIEdgeInsets)inset;
- (void)setTableViewScrollIndicatorInsetsWithInset:(UIEdgeInsets)inset;
- (void)setTableViewContentOffsetWithOffset:(CGPoint)offset animated:(BOOL)animated;
- (UIEdgeInsets)getTableViewContentInset SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)getTableViewScrollIndicatorInsets SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)getTableViewContentOffset SWIFT_WARN_UNUSED_RESULT;
- (CGSize)getTableViewContentSize SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface ChatView (SWIFT_EXTENSION(IMSdk)) <ChatDetailCheckDelegate>
- (void)getCustomView:(NSString * _Null_unspecified)amid body:(NSString * _Null_unspecified)body handleCustomView:(void (^ _Null_unspecified)(UIView * _Nullable))handle tapCustomView:(void (^ _Null_unspecified)(UIView * _Nullable))tap;
- (void)tapCardButonIndexPath:(NSString * _Null_unspecified)amid buttonId:(NSString * _Null_unspecified)buttonId;
- (void)tapfileAtIndexPath:(NSString * _Null_unspecified)mid;
- (void)tapImageAtIndexPath:(NSString * _Null_unspecified)chatId messageId:(NSInteger)messageId;
- (void)getMessageUnReadCount:(NSInteger)count;
- (void)tapMessageText:(NSString * _Null_unspecified)amid tempId:(NSString * _Null_unspecified)tempId textId:(NSString * _Null_unspecified)textId;
- (void)clickTxtNoticeCardIndexPath:(NSString * _Null_unspecified)amid buttonId:(NSString * _Null_unspecified)buttonId;
@end


SWIFT_CLASS("_TtC5IMSdk21ConversationBaseModel")
@interface ConversationBaseModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP5IMSdk20ConversationDelegate_")
@protocol ConversationDelegate <NSObject>
@optional
- (void)onItemClickWithAChatId:(NSString * _Nonnull)aChatId;
@end


SWIFT_PROTOCOL("_TtP5IMSdk7TMEvent_")
@protocol TMEvent <NSObject>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk17ConversationEvent")
@interface ConversationEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull chatIds;
+ (void)sendWithChatIds:(NSArray<NSString *> * _Nonnull)chatIds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk18ConversationMarker")
@interface ConversationMarker : ConversationBaseModel
@end


SWIFT_CLASS("_TtC5IMSdk24ConversationSettingEvent")
@interface ConversationSettingEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable chatIds;
+ (void)sendWithChatIds:(NSArray<NSString *> * _Nullable)chatIds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk20ConversationSubTitle")
@interface ConversationSubTitle : ConversationBaseModel
@end


SWIFT_CLASS("_TtC5IMSdk16ConversationType")
@interface ConversationType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger NORMAL;)
+ (NSInteger)NORMAL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger NOTIFICATION;)
+ (NSInteger)NOTIFICATION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FOLDER;)
+ (NSInteger)FOLDER SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk16ConversationView")
@interface ConversationView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setDelegateWithDelegate:(id <ConversationDelegate> _Nonnull)delegate;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface ConversationView (SWIFT_EXTENSION(IMSdk)) <ChannelListCheckDelegate>
- (void)didSelectAchatId:(NSString * _Nonnull)aChatId;
@end


SWIFT_PROTOCOL("_TtP5IMSdk27ConversionViewModelDelegate_")
@protocol ConversionViewModelDelegate <NSObject>
@optional
- (void)conversationUnReadNumChange;
@end


SWIFT_CLASS("_TtC5IMSdk17FileDownloadEvent")
@interface FileDownloadEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull objectIds;
+ (void)sendWithObjectIds:(NSArray<NSString *> * _Nonnull)objectIds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk11FilePreView")
@interface FilePreView : UIView <UIDocumentInteractionControllerDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class QLPreviewController;
@protocol QLPreviewItem;

@interface FilePreView (SWIFT_EXTENSION(IMSdk)) <QLPreviewControllerDataSource, QLPreviewControllerDelegate>
- (NSInteger)numberOfPreviewItemsInPreviewController:(QLPreviewController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
- (id <QLPreviewItem> _Nonnull)previewController:(QLPreviewController * _Nonnull)controller previewItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk15FileUploadEvent")
@interface FileUploadEvent : NSObject <TMEvent>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull objectIds;
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk18FileUploadProgress")
@interface FileUploadProgress : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FileUploadProgress * _Nonnull shared;)
+ (FileUploadProgress * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)initializeUploadDB;
- (void)updateUploadingProgressWithObjectId:(NSString * _Nonnull)objectId progress:(NSInteger)progress;
- (void)startProgressWithObjectId:(NSString * _Nonnull)objectId progress:(NSInteger)progress;
- (void)updateUploadFailureProgressWithObjectId:(NSString * _Nonnull)objectId;
- (void)updateProgressBucketIDWithObjectId:(NSString * _Nonnull)objectId bucketID:(NSString * _Nonnull)bucketID;
- (void)deleteTaskWithObjectId:(NSString * _Nonnull)objectId;
- (NSInteger)getProgressWithObjectId:(NSString * _Nonnull)objectId SWIFT_WARN_UNUSED_RESULT;
- (BOOL)uploadTaskIsEmpty SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getProgressBucketIDWithObjectId:(NSString * _Nonnull)objectId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP5IMSdk10IMDelegate_")
@protocol IMDelegate <NSObject>
@optional
- (void)authCodeExpireWithAUid:(NSString * _Nonnull)aUid;
- (void)onShowUserInfoWithAUids:(NSArray<NSString *> * _Nonnull)aUids;
- (void)onReceiveMessageWithAMids:(NSArray<NSString *> * _Nonnull)aMids;
- (void)onShowConversationSubTitleWithAChatIds:(NSArray<NSString *> * _Nonnull)aChatIds;
- (void)onShowConversationMarkerWithAChatIds:(NSArray<NSString *> * _Nonnull)aChatIds;
@end

typedef SWIFT_ENUM(NSInteger, IMEnvironmentType, open) {
  IMEnvironmentTypePro = 1,
  IMEnvironmentTypeAlpha = 2,
};

@class NSData;
@protocol TMConversionSelector;
@class TMConversionViewModel;
@class TmConversationInfo;
@class TmMessage;
@class UserInfoModel;

SWIFT_CLASS("_TtC5IMSdk5IMSdk")
@interface IMSdk : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) IMSdk * _Nullable shared;)
+ (IMSdk * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(IMSdk * _Nullable)value;
+ (IMSdk * _Nonnull)getInstanceWithAk:(NSString * _Nonnull)ak env:(enum IMEnvironmentType)env deviceId:(NSString * _Nonnull)deviceId SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <IMDelegate> _Nullable delegate;
- (void)initUserWithAUid:(NSString * _Nonnull)aUid SWIFT_METHOD_FAMILY(none);
- (void)setIMDelegateWithDelegate:(id <IMDelegate> _Nonnull)delegate;
- (void)setAuthCodeWithAuth:(NSString * _Nonnull)auth;
- (void)createChatWithAChatId:(NSString * _Nonnull)aChatId chatName:(NSString * _Nonnull)chatName auids:(NSArray<NSString *> * _Nonnull)auids success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSString * _Nonnull))fail;
- (void)sendTextMessageWithAChatId:(NSString * _Nonnull)aChatId aMid:(NSString * _Nonnull)aMid content:(NSString * _Nonnull)content;
- (void)sendImageMessageWithAChatId:(NSString * _Nonnull)aChatId aMid:(NSString * _Nonnull)aMid data:(NSData * _Nonnull)data format:(NSString * _Nonnull)format isOrigin:(BOOL)isOrigin;
- (void)sendAttachmentMessageWithAChatId:(NSString * _Nonnull)aChatId aMid:(NSString * _Nonnull)aMid data:(NSData * _Nonnull)data fileName:(NSString * _Nonnull)fileName format:(NSString * _Nonnull)format;
- (void)sendCardMessageWithAChatId:(NSString * _Nonnull)aChatId aMid:(NSString * _Nonnull)aMid msg:(CardMessage * _Nonnull)msg;
- (void)disableCardMessageWithAMid:(NSString * _Nonnull)aMid buttonIds:(NSArray<NSString *> * _Nonnull)buttonIds;
- (TMConversionViewModel * _Nonnull)createConversationViewModelWithSelector:(id <TMConversionSelector> _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (ChatView * _Nonnull)creatChatViewWithAChatId:(NSString * _Nonnull)aChatId SWIFT_WARN_UNUSED_RESULT;
- (TMImageBrowserView * _Nonnull)creatImageBrowserViewWithChatId:(NSString * _Nonnull)chatId currentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TmConversationInfo *> * _Nonnull)getConversions SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TmMessage *> * _Nonnull)getMassagesWithAChatId:(NSString * _Nonnull)aChatId SWIFT_WARN_UNUSED_RESULT;
- (void)joinTestGroupWithSuccess:(void (^ _Nullable)(NSString * _Nonnull))success fail:(void (^ _Nullable)(NSString * _Nonnull))fail;
- (void)setConversationWithAChatId:(NSString * _Nonnull)aChatId isMute:(BOOL)isMute;
- (void)startSocket;
- (void)setUserInfoWithUserInfos:(NSArray<UserInfoModel *> * _Nonnull)userInfos complete:(void (^ _Nullable)(NSInteger))complete;
- (void)setConversationSubTitleWithSubTitles:(NSArray<ConversationSubTitle *> * _Nonnull)subTitles;
- (void)setConversationMarkerWithMarkers:(NSArray<ConversationMarker *> * _Nonnull)markers;
- (void)loginOut;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk9MMKVUtils")
@interface MMKVUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk12MessageEvent")
@interface MessageEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull mids;
@property (nonatomic, copy) NSString * _Nonnull chatId;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull datas;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC5IMSdk11RemarkModel")
@interface RemarkModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SwipeAction;

SWIFT_CLASS("_TtC5IMSdk15SwipeActionView")
@interface SwipeActionView : UIView
@property (nonatomic, readonly, strong) SwipeAction * _Nonnull action;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)setupSwipeActionView;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5IMSdk20StackSwipeActionView")
@interface StackSwipeActionView : SwipeActionView
- (nonnull instancetype)initWithAction:(SwipeAction * _Nonnull)action width:(CGFloat)width OBJC_DESIGNATED_INITIALIZER;
- (void)setupSwipeActionView;
@end

@class UIColor;
@class UIFont;
@class UIImage;
@class NSIndexPath;

SWIFT_CLASS("_TtC5IMSdk11SwipeAction")
@interface SwipeAction : NSObject
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic, strong) UIFont * _Nonnull font;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic) CGFloat imageSize;
@property (nonatomic, readonly, copy) void (^ _Nonnull handler)(SwipeAction * _Nonnull, NSIndexPath * _Nullable);
- (nonnull instancetype)initWithHandler:(void (^ _Nonnull)(SwipeAction * _Nonnull, NSIndexPath * _Nullable))handler OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, SwipeDirection, open) {
  SwipeDirectionLeft = 0,
  SwipeDirectionRight = 1,
};

@protocol SwipeTableViewCellDelegate;
@protocol SwipeTableViewCellDataSource;
@class UITableView;
@class UIGestureRecognizer;
@class UIEvent;

SWIFT_CLASS("_TtC5IMSdk18SwipeTableViewCell")
@interface SwipeTableViewCell : UITableViewCell
@property (nonatomic) BOOL isSwipeEnabled;
@property (nonatomic) BOOL isSwipeToExecuteEnabled;
@property (nonatomic) BOOL isActionsAnimationEnabled;
@property (nonatomic) BOOL isTapToCloseEnabled;
@property (nonatomic) CGFloat swipeToExecuteTreshold;
@property (nonatomic, weak) id <SwipeTableViewCellDelegate> _Nullable delegate;
@property (nonatomic, weak) id <SwipeTableViewCellDataSource> _Nullable dataSource;
@property (nonatomic, readonly, weak) UITableView * _Null_unspecified tableView;
@property (nonatomic, readonly) BOOL isSwiped;
@property (nonatomic, copy) void (^ _Nullable swipeClosure)(CGFloat, BOOL);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (SwipeAction * _Nullable)visibleActionAt:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (void)resetSwipeWithCompletion:(void (^ _Nullable)(void))completion;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_PROTOCOL("_TtP5IMSdk28SwipeTableViewCellDataSource_")
@protocol SwipeTableViewCellDataSource
- (NSInteger)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell numberOfActionsForSwipeDirection:(enum SwipeDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (SwipeAction * _Nonnull)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell actionAtIndex:(NSInteger)index forSwipeDirection:(enum SwipeDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (SwipeActionView * _Nullable)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell actionViewForActionAtIndex:(NSInteger)index forSwipeDirection:(enum SwipeDirection)direction SWIFT_WARN_UNUSED_RESULT;
@optional
- (CGFloat)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell widthForActionsForSwipeDirection:(enum SwipeDirection)direction SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5IMSdk26SwipeTableViewCellDelegate_")
@protocol SwipeTableViewCellDelegate
@optional
- (BOOL)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell shouldStartSwipeForDirection:(enum SwipeDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (void)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell willStartSwipeForDirection:(enum SwipeDirection)direction;
- (void)swipeTableViewCell:(SwipeTableViewCell * _Nonnull)cell didEndSwipeForDirection:(enum SwipeDirection)direction;
@end


SWIFT_CLASS("_TtC5IMSdk18TMActionSheetAlert")
@interface TMActionSheetAlert : ASDisplayNode
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ASLayoutSpec;

@interface TMActionSheetAlert (SWIFT_EXTENSION(IMSdk))
- (ASLayoutSpec * _Nonnull)layoutSpecThatFits:(ASSizeRange)constrainedSize SWIFT_WARN_UNUSED_RESULT;
@end

@class TMAlertAction;
@class NSMutableAttributedString;

@interface TMActionSheetAlert (SWIFT_EXTENSION(IMSdk))
+ (void)show:(NSArray<TMAlertAction *> * _Nonnull)actions willShowClosure:(void (^ _Nullable)(void))willShowClosure didDismissClosure:(void (^ _Nullable)(void))didDismissClosure;
+ (void)showWithTitle:(NSMutableAttributedString * _Nullable)title actions:(NSArray<TMAlertAction *> * _Nonnull)actions willShowClosure:(void (^ _Nullable)(void))willShowClosure didDismissClosure:(void (^ _Nullable)(void))didDismissClosure;
/// dismiss
+ (void)dismiss;
@end


SWIFT_CLASS("_TtC5IMSdk13TMAlertAction")
@interface TMAlertAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
@property (nonatomic, strong) UIColor * _Nonnull color;
@property (nonatomic, readonly) BOOL isAutoDismiss;
@property (nonatomic, readonly, copy) void (^ _Nullable actionClosure)(void);
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color isAutoDismiss:(BOOL)isAutoDismiss actionClosure:(void (^ _Nullable)(void))actionClosure OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk14TMCardBaseCell")
@interface TMCardBaseCell : ChatBaseCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end

@class TMMessageModel;

SWIFT_CLASS("_TtC5IMSdk16TMCardCenterCell")
@interface TMCardCenterCell : TMCardBaseCell
- (void)setupModel:(TMMessageModel * _Nonnull)model;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end


SWIFT_CLASS("_TtC5IMSdk14TMCardLeftCell")
@interface TMCardLeftCell : TMCardBaseCell
- (void)setupModel:(TMMessageModel * _Nonnull)model;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end

@class TextVo;

SWIFT_CLASS("_TtC5IMSdk22TMCardMessageContentVo")
@interface TMCardMessageContentVo : NSObject
@property (nonatomic, strong) AvatarModel * _Nullable icon;
@property (nonatomic, copy) NSArray<TextVo *> * _Nonnull text;
@property (nonatomic, copy) NSArray<ButtonVo *> * _Nonnull buttons;
@property (nonatomic, readonly) CGFloat fontSize;
@property (nonatomic, strong) NSMutableAttributedString * _Nonnull textAttr;
@property (nonatomic) CGSize textAttrSize;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk15TMCardRightCell")
@interface TMCardRightCell : TMCardBaseCell
- (void)setupModel:(TMMessageModel * _Nonnull)model;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end


SWIFT_PROTOCOL("_TtP5IMSdk26TMChatDetailMessageDisplay_")
@protocol TMChatDetailMessageDisplay
- (NSArray<TMMessageModel *> * _Nonnull)performMsgEventDataWithEventMids:(NSArray<NSString *> * _Nonnull)eventMids sourceData:(NSArray<NSArray<TMMessageModel *> *> * _Nonnull)sourceData eventMsgArr:(NSArray<TmMessage *> * _Nullable)eventMsgArr SWIFT_WARN_UNUSED_RESULT;
- (void)msgEventChangeUIWithTableView:(UITableView * _Nonnull)tableView chatId:(NSString * _Nonnull)chatId eventMsgArr:(NSArray<TmMessage *> * _Nullable)eventMsgArr;
@end


SWIFT_PROTOCOL("_TtP5IMSdk20TMChatDetailProtocol_")
@protocol TMChatDetailProtocol <TMChatDetailMessageDisplay>
@end


SWIFT_CLASS("_TtC5IMSdk25TMChatDetailTimeGroupView")
@interface TMChatDetailTimeGroupView : UITableViewHeaderFooterView
- (nonnull instancetype)initWithReuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (void)setTimeWithTime:(NSInteger)time;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5IMSdk14TMChatListCell")
@interface TMChatListCell : SwipeTableViewCell
@property (nonatomic, strong) TmConversationInfo * _Null_unspecified tmInfo;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)ChangeLineViewHeightWithIsChange:(BOOL)isChange;
- (void)changeBackgroundColorWithColor:(UIColor * _Nonnull)color;
- (void)getTmInfoWithTmInfo:(TmConversationInfo * _Nonnull)tmInfo;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end


SWIFT_CLASS("_TtC5IMSdk10TMChatMenu")
@interface TMChatMenu : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, strong) UIImage * _Nonnull image;
@property (nonatomic, readonly, copy) void (^ _Nonnull selectedBlock)(void);
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nonnull)image selectedBlock:(void (^ _Nonnull)(void))selectedBlock OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk19TMChatMenuAlertView")
@interface TMChatMenuAlertView : UIView
- (nonnull instancetype)initWithIsLeft:(BOOL)isLeft minLocation:(CGFloat)minLocation maxLocation:(CGFloat)maxLocation menus:(NSArray<TMChatMenu *> * _Nonnull)menus OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)show;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5IMSdk16TMChatMenuBgView")
@interface TMChatMenuBgView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP5IMSdk20TMConversionSelector_")
@protocol TMConversionSelector <NSObject>
@optional
- (NSArray<NSString *> * _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)unSelector SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk21TMConversionViewModel")
@interface TMConversionViewModel : NSObject
@property (nonatomic) NSInteger unReadCount;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull partChatIds;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull unPartChatIds;
- (void)setSortWithSortCalsure:(BOOL (^ _Nonnull)(TmConversationInfo * _Nonnull, TmConversationInfo * _Nonnull))sortCalsure;
- (NSArray<TmConversationInfo *> * _Nonnull)getSortListWithList:(NSArray<TmConversationInfo *> * _Nonnull)list SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setDelegateWithDelegate:(id <ConversionViewModelDelegate> _Nonnull)delegate;
+ (TMConversionViewModel * _Nonnull)createConversationViewModelWithSelector:(id <TMConversionSelector> _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (void)getUnReadCountWithSuccess:(void (^ _Nullable)(NSInteger))success;
- (void)setChatTopWithAChatId:(NSString * _Nonnull)aChatId success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSString * _Nonnull))fail;
- (void)setChatCloseTopWithAChatId:(NSString * _Nonnull)aChatId success:(void (^ _Nullable)(void))success fail:(void (^ _Nullable)(NSString * _Nonnull))fail;
- (BOOL)getChatIsTopWithAChatId:(NSString * _Nonnull)aChatId SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getChatIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)filterChatIdsWithChatIds:(NSArray<NSString *> * _Nonnull)chatIds SWIFT_WARN_UNUSED_RESULT;
- (ConversationView * _Nonnull)getConversionView SWIFT_WARN_UNUSED_RESULT;
- (void)updateSelectorWithSelectAchatIds:(NSArray<NSString *> * _Nonnull)selectAchatIds unSelectAchatIds:(NSArray<NSString *> * _Nonnull)unSelectAchatIds;
- (void)setFolderWithAChatId:(NSString * _Nonnull)aChatId content:(NSString * _Nonnull)content name:(NSString * _Nonnull)name imageData:(NSData * _Nonnull)imageData imageFormat:(NSString * _Nonnull)imageFormat;
@end


SWIFT_CLASS("_TtC5IMSdk15TMCustomizeCell")
@interface TMCustomizeCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (void)setupModel:(TMMessageModel * _Nonnull)model;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end

@class TMFaceAttachment;
@class NSAttributedString;

SWIFT_CLASS("_TtC5IMSdk11TMEmojiTool")
@interface TMEmojiTool : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) TMEmojiTool * _Nonnull default_;)
+ (TMEmojiTool * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TMFaceAttachment *> * _Nonnull)getFaceAttachments SWIFT_WARN_UNUSED_RESULT;
- (void)preGetUserFaceHistory;
- (void)clickFaceCodeWithCode:(NSString * _Nonnull)code;
- (NSArray<TMFaceAttachment *> * _Nonnull)getHistroyFace SWIFT_WARN_UNUSED_RESULT;
/// 12345[cry]678910[shy][cry]12034    replace [shy] with ‘&’,  length 1
- (NSString * _Nonnull)converStrWithStr:(NSString * _Nonnull)str replaceString:(NSString * _Nonnull)replaceString SWIFT_WARN_UNUSED_RESULT;
/// init AttributedString call this method, if use YYLabel
/// 12345[cry]678910[shy][cry]120348024 to AttributedString
- (NSAttributedString * _Nonnull)transformAttachmentsAttributedStringWith:(NSString * _Nonnull)text font:(UIFont * _Nonnull)font imageSize:(CGSize)imageSize SWIFT_WARN_UNUSED_RESULT;
/// init AttributedString call this method, if use UILabel / UITextView
/// 12345[cry]678910[shy][cry]120348024 to AttributedString
- (NSAttributedString * _Nonnull)transformAttachmentsAttributedStringOtherWith:(NSString * _Nonnull)text font:(UIFont * _Nonnull)font imageSize:(CGSize)imageSize SWIFT_WARN_UNUSED_RESULT;
/// 😊 to AttributedString
- (NSAttributedString * _Nonnull)createAttachmentsAttributedStringWithAttachment:(TMFaceAttachment * _Nonnull)attachment font:(UIFont * _Nonnull)font imageSize:(CGSize)imageSize SWIFT_WARN_UNUSED_RESULT;
- (NSMutableAttributedString * _Nonnull)forwardtransformContactAttributedStringWith:(NSString * _Nonnull)text font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (UIImage * _Nullable)fileTypeImageWithFileType:(NSString * _Nonnull)fileType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class TMImageTempModel;

SWIFT_CLASS("_TtC5IMSdk11TMFilesTool")
@interface TMFilesTool : NSObject
+ (void)getFileWithImageModel:(TMImageTempModel * _Nonnull)imageModel complete:(void (^ _Nullable)(BOOL, NSString * _Nonnull))complete;
+ (void)getFileWithObjectID:(NSString * _Nonnull)objectID width:(NSInteger)width height:(NSInteger)height complete:(void (^ _Nullable)(BOOL, NSString * _Nonnull))complete;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk18TMImageBrowserView")
@interface TMImageBrowserView : UIView
@property (nonatomic, copy) void (^ _Nullable clickPanGestureCloseVC)(void);
@property (nonatomic, strong) UIImage * _Nullable screenImage;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface TMImageBrowserView (SWIFT_EXTENSION(IMSdk)) <BrowserCheckDelegate>
- (void)panGestureCloseVC;
@end

enum TMLanguageSettingType : NSInteger;

SWIFT_CLASS("_TtC5IMSdk10TMLanguage")
@interface TMLanguage : NSObject
@property (nonatomic) enum TMLanguageSettingType languageType;
@property (nonatomic, copy) NSString * _Nonnull showTag;
@property (nonatomic, copy) NSString * _Nonnull systemTag;
@property (nonatomic, copy) NSString * _Nonnull serverTag;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface TMLanguage (SWIFT_EXTENSION(IMSdk))
+ (BOOL)isChinese SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isTurkey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<TMLanguage *> * _Nonnull)availableLanguages SWIFT_WARN_UNUSED_RESULT;
@end


@interface TMLanguage (SWIFT_EXTENSION(IMSdk))
/// get current user language type
+ (enum TMLanguageSettingType)getCurrentUserLanguageType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCurrentUserLanguageValuesWithLanguageType:(enum TMLanguageSettingType)languageType SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserLanguageWithType:(enum TMLanguageSettingType)type userID:(NSString * _Nullable)userID;
+ (void)setLanguageWithLan:(NSString * _Nonnull)lan;
/// Reset the language (called when you log out, when the language is set to auto)
+ (void)resetUserLanguage;
+ (NSString * _Nonnull)getCurrentLanguageWithSystemTag:(NSString * _Nonnull)systemTag SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getTrueLanguageTypeString SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, TMLanguageSettingType, open) {
  TMLanguageSettingTypeAuto = 0,
  TMLanguageSettingTypeEn = 1,
  TMLanguageSettingTypeTr = 2,
  TMLanguageSettingTypeFr = 3,
  TMLanguageSettingTypeZh_hans = 4,
  TMLanguageSettingTypeJa = 5,
  TMLanguageSettingTypeKo = 6,
  TMLanguageSettingTypeZh_hant = 7,
  TMLanguageSettingTypeIt = 8,
  TMLanguageSettingTypeId = 9,
  TMLanguageSettingTypeDe = 10,
  TMLanguageSettingTypeDa = 11,
  TMLanguageSettingTypeCs = 12,
  TMLanguageSettingTypeMs = 13,
  TMLanguageSettingTypeHu = 14,
  TMLanguageSettingTypeEs = 15,
  TMLanguageSettingTypeSw = 16,
  TMLanguageSettingTypeFi = 17,
  TMLanguageSettingTypeAr = 18,
};


SWIFT_CLASS("_TtC5IMSdk19TMLoginSuccessEvent")
@interface TMLoginSuccessEvent : NSObject <TMEvent>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk5TMNet")
@interface TMNet : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk21TMNotificationManager")
@interface TMNotificationManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TMNotificationManager * _Nonnull shared;)
+ (TMNotificationManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)observer:(NSObject * _Nonnull)observer :(NSString * _Nonnull)name :(void (^ _Nonnull)(id _Nullable, id _Nullable))block;
- (void)removeObserver:(NSObject * _Nonnull)observer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk24TMPageLoadContainLastMsg")
@interface TMPageLoadContainLastMsg : NSObject <TMChatDetailMessageDisplay>
- (NSArray<TMMessageModel *> * _Nonnull)performMsgEventDataWithEventMids:(NSArray<NSString *> * _Nonnull)eventMids sourceData:(NSArray<NSArray<TMMessageModel *> *> * _Nonnull)sourceData eventMsgArr:(NSArray<TmMessage *> * _Nullable)eventMsgArr SWIFT_WARN_UNUSED_RESULT;
- (void)msgEventChangeUIWithTableView:(UITableView * _Nonnull)tableView chatId:(NSString * _Nonnull)chatId eventMsgArr:(NSArray<TmMessage *> * _Nullable)eventMsgArr;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk13TMPathManager")
@interface TMPathManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TMPathManager * _Nonnull shared;)
+ (TMPathManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isFileExistsWithFilePath:(NSString * _Nonnull)filePath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getHomeDirectoryExists SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fileCacheDirectoryWithFilePath:(NSString * _Nonnull)filePath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)picSaveHomeDirectoryWithNameWithImage:(UIImage * _Nullable)image path:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)picSaveHomeDirectoryWithNameWithImage:(UIImage * _Nullable)image name:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)saveFileWithImagePath:(NSString * _Nullable)imagePath filePath:(NSString * _Nonnull)filePath;
- (void)saveFile_imageWithImage:(UIImage * _Nullable)image filePath:(NSString * _Nonnull)filePath;
- (UIImage * _Nullable)getFileWithFilePath:(NSString * _Nonnull)filePath SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)resizeWithNewSize:(CGSize)newSize oimage:(UIImage * _Nonnull)oimage suffix:(NSString * _Nonnull)suffix SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)resizeWithNewSize:(CGSize)newSize oimage:(UIImage * _Nonnull)oimage targetPath:(NSString * _Nonnull)targetPath suffix:(NSString * _Nonnull)suffix SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getOssDir SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)thumObjectIdTransferOriginalObjectIdWithThumObjectId:(NSString * _Nonnull)thumObjectId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getFullFilePathWithObjectId:(NSString * _Nonnull)objectId SWIFT_WARN_UNUSED_RESULT;
- (TMImageTempModel * _Nonnull)getFileTempModelWithAvatarModel:(AvatarModel * _Nullable)avatarModel sourceSence:(NSInteger)sourceSence imageType:(TmImageType)imageType fileSource:(TmFileSource)fileSource SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk15TMProjectConfig")
@interface TMProjectConfig : NSObject
+ (NSString * _Nonnull)tmmPayId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)atAllId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getTextTypeKeyForAt SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getUidTypeKeyForAt SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localizableWithValue:(NSString * _Nonnull)value placeholderArr:(NSArray<NSString *> * _Nonnull)placeholderArr SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)minimumLongPressDuration SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)chatInputTextMaxLength SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)chatGifMaxSize SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)chatImageMaxSize SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)chatVideoMaxSize SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)chatFileMaxSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk18TMSectionTimeLabel")
@interface TMSectionTimeLabel : UILabel
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk15TMSelectAtModel")
@interface TMSelectAtModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull atId;
@property (nonatomic, copy) NSString * _Nonnull name;
- (NSString * _Nonnull)nameContainAt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Some swift related methods cannot be directly called by OC, and conversion is done through this class
SWIFT_CLASS("_TtC5IMSdk15TMSwiftOcBridge")
@interface TMSwiftOcBridge : NSObject
/// single column
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TMSwiftOcBridge * _Nonnull shared;)
+ (TMSwiftOcBridge * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Notification of language change. After receiving the language change notification of <code>Localize_Swift</code>, send this notification and distribute it to<code> TMOCBaseViewController</code>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull TMLanguageChangeNotification;)
+ (NSString * _Nonnull)TMLanguageChangeNotification SWIFT_WARN_UNUSED_RESULT;
/// Language change callback (quickly and conveniently obtain the language change callback, which can be used for debugging, it is not recommended to use it in a large area)
@property (nonatomic, copy) void (^ _Nullable languageChangedClosure)(NSString * _Nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface TMSwiftOcBridge (SWIFT_EXTENSION(IMSdk))
/// Set the current language
/// -Parameter language: current language (en, zh-Hans, zh-Hant, etc.)
- (void)setCurrentLanguageWithLanguage:(NSString * _Nonnull)language;
/// Get the current language
- (NSString * _Nonnull)currentLanguage SWIFT_WARN_UNUSED_RESULT;
/// localization
/// -Parameter key: key
- (NSString * _Nullable)localizedWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface TMSwiftOcBridge (SWIFT_EXTENSION(IMSdk))
+ (NSString * _Nonnull)randomString:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)generateIv SWIFT_WARN_UNUSED_RESULT;
@end

@class UITextView;
@class UITextField;

@interface TMSwiftOcBridge (SWIFT_EXTENSION(IMSdk))
/// The maximum length limit of ordinary TextView
/// -Parameter textView: UITextView
/// -Parameter maxLength: maximum length
- (void)textViewLimitWith:(UITextView * _Nonnull)textView maxLength:(NSInteger)maxLength;
/// TextField maximum length limit, support Chinese
/// -Parameter textField: textField
/// -Parameter maxLength: maximum length
- (void)textFieldLimitWith:(UITextField * _Nonnull)textField maxLength:(NSInteger)maxLength;
- (void)transformTurkishInputDecimalSeparatorWithTextField:(UITextField * _Nonnull)textField;
/// TextField floating point input limit (please call in <code>textField (_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String)</code>)
/// -Parameter textField: textField
/// -Parameter shouldChangeCharactersInRange: shouldChangeCharactersInRange
/// -Parameter replacementString: replacementString
/// -Parameter decimalNumberCount: Number of decimal places
/// -Parameter maxNumber: maximum value
- (BOOL)validateNumberInputWithTextField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)shouldChangeCharactersInRange replacementString:(NSString * _Nonnull)replacementString decimalNumberCount:(NSInteger)decimalNumberCount maxNumber:(NSString * _Nonnull)maxNumber SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk23TMSystemNoticeContentVo")
@interface TMSystemNoticeContentVo : NSObject
@property (nonatomic) CGFloat titleHeight;
@property (nonatomic) CGFloat descHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk16TMTimeFormatTool")
@interface TMTimeFormatTool : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk10TMTimeTool")
@interface TMTimeTool : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) TMTimeTool * _Nonnull default_;)
+ (TMTimeTool * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
/// \param time date timeinterval, unit seconds.
///
- (NSString * _Nonnull)checkDateStringWithTime:(NSTimeInterval)time formatString:(NSString * _Nonnull)formatString SWIFT_WARN_UNUSED_RESULT;
/// Gets the conversation list time  string
/// \param time date timeinterval, unit s
///
- (NSString * _Nonnull)checkConversationDateWithTime:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)convertChatMessageTimeWithGroupTime:(NSTimeInterval)groupTime time:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isThisYearWithTime:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk15TMTransferLogic")
@interface TMTransferLogic : NSObject
/// sourceSence: -> TMTransferSence
+ (void)startDownloadWithObjectID:(NSString * _Nonnull)objectID bucketId:(NSString * _Nonnull)bucketId sourceSence:(NSInteger)sourceSence isNeedNotice:(NSInteger)isNeedNotice;
+ (NSInteger)queryProgressValueWithEventWithObjectId:(NSString * _Nonnull)objectId SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)queryProgressValueNormalWithObjectId:(NSString * _Nonnull)objectId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, TMTransferProgressState, open) {
  TMTransferProgressStateFailureMin = -100,
  TMTransferProgressStateStart = 0,
  TMTransferProgressStateSuccess = 100,
  TMTransferProgressStateFileNotExist = 404,
  TMTransferProgressStateWait = 600,
};

typedef SWIFT_ENUM(NSInteger, TMTransferSence, open) {
  TMTransferSenceIM = 1,
  TMTransferSenceMoments = 2,
};


SWIFT_CLASS("_TtC5IMSdk25TMUidTextMessageContentVo")
@interface TMUidTextMessageContentVo : NSObject
@property (nonatomic, copy) NSString * _Nonnull temId;
@property (nonatomic) NSInteger clickTotalCount;
@property (nonatomic, strong) NSMutableAttributedString * _Nonnull textAttr;
- (void)addBlockWithAct:(void (^ _Nonnull)(NSString * _Nonnull))act;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk8TextItem")
@interface TextItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk18TextNoticeCardCell")
@interface TextNoticeCardCell : ChatBaseCell
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat TextNoticeCardCellPadding;)
+ (CGFloat)TextNoticeCardCellPadding SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat TextNoticeCardCellMargin;)
+ (CGFloat)TextNoticeCardCellMargin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat TextNoticeCardCellTitleBottomMargin;)
+ (CGFloat)TextNoticeCardCellTitleBottomMargin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat TextNoticeCardCellTimeLblHeight;)
+ (CGFloat)TextNoticeCardCellTimeLblHeight SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (void)setupModel:(TMMessageModel * _Nonnull)model;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@end


SWIFT_CLASS("_TtC5IMSdk6TextVo")
@interface TextVo : NSObject
@property (nonatomic, copy) NSString * _Nonnull t;
@property (nonatomic, copy) NSString * _Nonnull value;
@property (nonatomic, copy) NSString * _Nonnull color;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk6Thread")
@interface Thread : NSThread
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)main;
@end


SWIFT_CLASS("_TtC5IMSdk18TmConversationInfo")
@interface TmConversationInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable chatId;
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable lastMid;
@property (nonatomic) NSInteger timeStamp;
@property (nonatomic) NSInteger isMute;
@property (nonatomic) BOOL isMuteShow;
@property (nonatomic, copy) NSString * _Nullable qrCodeUrl;
@property (nonatomic) NSInteger headIndex;
@property (nonatomic) BOOL isHide;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable avatar;
@property (nonatomic) NSInteger unReadCount;
@property (nonatomic, strong) TmMessage * _Nullable lastTmMessage;
@property (nonatomic, copy) NSString * _Nonnull aChatId;
@property (nonatomic) NSInteger conversationType;
@property (nonatomic, copy) NSString * _Nonnull folderDes;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull folderChatIds;
@property (nonatomic, copy) NSString * _Nullable subTitle;
@property (nonatomic, strong) AvatarModel * _Nullable marker;
@property (nonatomic) NSInteger groupMemberCount;
@property (nonatomic) NSInteger hideSequence;
@property (nonatomic, strong) AvatarModel * _Nullable avatarInfo;
@property (nonatomic) BOOL hadMeeting;
@property (nonatomic) BOOL hadAt;
@property (nonatomic, copy) NSString * _Nonnull notice;
@property (nonatomic) BOOL noticeIsRead;
@property (nonatomic, strong) NSMutableAttributedString * _Nullable attributedText;
@property (nonatomic, copy) NSString * _Nullable timeString;
@property (nonatomic, copy) NSString * _Nonnull groupSenderName;
@property (nonatomic, copy) NSString * _Nonnull noticeContent;
@property (nonatomic) NSInteger isTop;
@property (nonatomic) NSInteger topTimeStamp;
@property (nonatomic) NSInteger init_count;
- (NSInteger)init_count SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull lastMessageTitle;
@end


SWIFT_CLASS("_TtC5IMSdk21TmConversationManager")
@interface TmConversationManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong, getter=default, setter=setDefault:) TmConversationManager * _Nonnull default_;)
+ (TmConversationManager * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefault:(TmConversationManager * _Nonnull)value;
- (NSArray<TmConversationInfo *> * _Nonnull)getConversationWithChatIds:(NSArray<NSString *> * _Nonnull)chatIds SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TmConversationInfo *> * _Nonnull)loadConversationWithLastTimestamp:(NSInteger)lastTimestamp count:(NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (void)hideConversationWithChatId:(NSString * _Nonnull)chatId block:(SWIFT_NOESCAPE void (^ _Nonnull)(void))block;
- (void)newHideConversationWithChatId:(NSString * _Nonnull)chatId isSingle:(BOOL)isSingle complete:(void (^ _Nullable)(NSError * _Nullable))complete;
- (void)markReadWithChatId:(NSString * _Nonnull)chatId isRead:(NSInteger)isRead;
- (void)ReadReceiptWithChatId:(NSString * _Nonnull)chatId;
- (void)updateSingleChatTopWithChatId:(NSString * _Nonnull)chatId isTop:(NSInteger)isTop isGroup:(BOOL)isGroup complete:(void (^ _Nullable)(NSError * _Nullable, NSInteger))complete;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk21TmFileProgressManager")
@interface TmFileProgressManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk14TmGroupManager")
@interface TmGroupManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) TmGroupManager * _Nonnull default_;)
+ (TmGroupManager * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (void)updateGroupMuteWithChatId:(NSString * _Nonnull)chatId isMute:(NSInteger)isMute complete:(void (^ _Nullable)(NSError * _Nullable))complete;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk15TmImageUrlParse")
@interface TmImageUrlParse : NSObject
@property (nonatomic, copy) NSString * _Nonnull bucketId;
@property (nonatomic, copy) NSString * _Nonnull format;
@property (nonatomic, copy) NSString * _Nonnull objectId;
@property (nonatomic) NSInteger thumbWidth;
@property (nonatomic) NSInteger thumbHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (TmImageUrlParse * _Nonnull)createWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getFileFullName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk9TmManager")
@interface TmManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) TmManager * _Nonnull default_;)
+ (TmManager * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TmMessageContentProtocol;
@class TmMessageExtra;
@class TmMessageContent;

SWIFT_CLASS("_TtC5IMSdk9TmMessage")
@interface TmMessage : NSObject
@property (nonatomic) NSInteger id;
@property (nonatomic, copy) NSString * _Nonnull mid;
@property (nonatomic, copy) NSString * _Nonnull amid;
@property (nonatomic, copy) NSString * _Nonnull chatId;
@property (nonatomic, copy) NSString * _Nonnull sender;
@property (nonatomic, strong) id <TmMessageContentProtocol> _Nonnull content;
@property (nonatomic) NSInteger status;
@property (nonatomic) NSInteger direction;
@property (nonatomic) NSInteger type;
@property (nonatomic) NSInteger isDel;
@property (nonatomic) NSInteger serverTime;
@property (nonatomic) NSInteger sendTime;
@property (nonatomic) NSInteger displayTime;
@property (nonatomic, copy) NSString * _Nonnull avatar;
@property (nonatomic, copy) NSString * _Nonnull nickName;
@property (nonatomic, copy) NSString * _Nonnull nameAlias;
@property (nonatomic, copy) NSString * _Nonnull uid;
@property (nonatomic, strong) TmMessageExtra * _Nullable extra;
@property (nonatomic) NSInteger atType;
@property (nonatomic) NSInteger isLocal;
@property (nonatomic) BOOL isPlayingAudio;
@property (nonatomic) float playAudioProgross;
@property (nonatomic, strong) AvatarModel * _Nullable avatarInfo;
@property (nonatomic, strong) AvatarModel * _Nullable imageInfo;
@property (nonatomic, strong) AvatarModel * _Nullable videoPostInfo;
- (BOOL)isSend SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isSingle SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isThird SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)remoteObjectId SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic) CGFloat cellHeight;
@property (nonatomic, strong) TmMessageContent * _Nonnull messageContent;
@property (nonatomic, copy) NSString * _Nonnull unknowMeaasgeText;
@property (nonatomic, strong) TMCardMessageContentVo * _Nonnull cardMsgVo;
@property (nonatomic, strong) TMUidTextMessageContentVo * _Nonnull uidTextMsgAVo;
@property (nonatomic, strong) TMSystemNoticeContentVo * _Nonnull textNoticeContentVo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC5IMSdk16TmMessageContent")
@interface TmMessageContent : NSObject
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic) NSInteger isOrigin;
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger size;
@property (nonatomic) NSInteger fileStatus;
@property (nonatomic) NSInteger duration;
@property (nonatomic) NSInteger type;
@property (nonatomic, copy) NSString * _Nonnull fileType;
@property (nonatomic, copy) NSString * _Nonnull objectId;
@property (nonatomic, copy) NSString * _Nonnull posterObjectId;
@property (nonatomic) NSInteger videoPosterWidth;
@property (nonatomic) NSInteger videoPosterHeight;
@property (nonatomic, copy) NSString * _Nonnull videoPosterFileType;
@property (nonatomic, copy) NSString * _Nonnull posterBucketId;
@property (nonatomic, copy) NSString * _Nonnull imageThumbPath;
@property (nonatomic, copy) NSString * _Nonnull imageOriginPath;
@property (nonatomic, copy) NSString * _Nonnull imageNormalPath;
@property (nonatomic, copy) NSString * _Nonnull filePath;
@property (nonatomic, copy) NSString * _Nonnull posterFilePath;
@property (nonatomic, copy) NSString * _Nonnull videoPath;
@property (nonatomic, copy) NSString * _Nonnull voicePath;
@property (nonatomic, copy) NSString * _Nonnull attachmentPath;
@property (nonatomic) NSInteger thumbWidth;
@property (nonatomic) NSInteger thumbHeight;
@property (nonatomic) NSInteger callActionType;
@property (nonatomic) NSInteger callType;
@property (nonatomic, copy) NSString * _Nonnull callDuration;
@property (nonatomic, copy) NSString * _Nonnull callOperatorId;
@property (nonatomic, copy) NSString * _Nonnull bucketId;
@property (nonatomic, copy) NSString * _Nonnull uid;
@property (nonatomic, copy) NSString * _Nonnull momentId;
@property (nonatomic, copy) NSString * _Nonnull appletName;
@property (nonatomic, copy) NSString * _Nonnull appletDes;
@property (nonatomic, copy) NSString * _Nonnull appletId;
@property (nonatomic) NSInteger appletType;
@property (nonatomic, copy) NSString * _Nonnull logoBucketId;
@property (nonatomic, copy) NSString * _Nonnull logoFileType;
@property (nonatomic, copy) NSString * _Nonnull logoObjectId;
@property (nonatomic, copy) NSString * _Nonnull iconBucketId;
@property (nonatomic, copy) NSString * _Nonnull iconFileType;
@property (nonatomic, copy) NSString * _Nonnull iconObjectId;
@property (nonatomic, copy) NSString * _Nonnull logoFilePath;
@property (nonatomic, copy) NSString * _Nonnull iconFilePath;
@property (nonatomic, copy) NSString * _Nonnull dealId;
@property (nonatomic) NSInteger amount;
@property (nonatomic) NSInteger totalAmount;
@property (nonatomic, copy) NSString * _Nonnull coinName;
@property (nonatomic, copy) NSString * _Nonnull coinId;
@property (nonatomic, copy) NSString * _Nonnull outTradeNo;
@property (nonatomic) NSInteger act;
@property (nonatomic, copy) NSString * _Nonnull fromUid;
@property (nonatomic, copy) NSString * _Nonnull toUid;
@property (nonatomic) NSInteger createTime;
@property (nonatomic, copy) NSString * _Nonnull bizType;
@property (nonatomic) NSInteger coinDecimal;
@property (nonatomic, copy) NSString * _Nonnull bless;
@property (nonatomic, copy) NSString * _Nonnull recordID;
@property (nonatomic, copy) NSString * _Nonnull luckUid;
@property (nonatomic, copy) NSString * _Nonnull giftText;
@property (nonatomic, copy) NSString * _Nonnull translateIos;
@property (nonatomic) NSInteger translateIosStatus;
@property (nonatomic, copy) NSString * _Nonnull mtid;
@property (nonatomic) NSInteger mt;
@property (nonatomic, copy) NSString * _Nonnull creator;
@property (nonatomic) NSInteger stime;
@property (nonatomic) NSInteger etime;
@property (nonatomic) NSInteger res;
@property (nonatomic) NSInteger ctime;
@property (nonatomic, copy) NSArray<TMSelectAtModel *> * _Nonnull atPersons;
@property (nonatomic, copy) NSString * _Nonnull atTextContainUid;
@property (nonatomic, copy) NSString * _Nonnull atTranslateTextContainUid;
@property (nonatomic, copy) NSString * _Nonnull lon;
@property (nonatomic, copy) NSString * _Nonnull lat;
@property (nonatomic, copy) NSString * _Nonnull addr;
@property (nonatomic, copy) NSString * _Nonnull desc;
@property (nonatomic, copy) NSString * _Nonnull zoom;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull body;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getFileIdWithBusId:(NSString * _Nonnull)busId SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5IMSdk24TmMessageContentProtocol_")
@protocol TmMessageContentProtocol
- (NSString * _Nonnull)decode SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getContentType SWIFT_WARN_UNUSED_RESULT;
- (TmMessageContent * _Nonnull)encode SWIFT_WARN_UNUSED_RESULT;
- (TmMessageContent * _Nonnull)encodeWithMessage:(TmMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
@end

enum TmMessageExtraActType : NSInteger;
enum TmMessageExtraDiviceType : NSInteger;

SWIFT_CLASS("_TtC5IMSdk14TmMessageExtra")
@interface TmMessageExtra : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull mids;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull ids;
@property (nonatomic) enum TmMessageExtraActType act;
@property (nonatomic, copy) NSString * _Nonnull op;
@property (nonatomic) enum TmMessageExtraDiviceType f;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, TmMessageExtraActType, open) {
  TmMessageExtraActTypeNormal = 0,
  TmMessageExtraActTypeForward = 1,
  TmMessageExtraActTypeReference = 2,
};

typedef SWIFT_ENUM(NSInteger, TmMessageExtraDiviceType, open) {
  TmMessageExtraDiviceTypeIos = 1,
  TmMessageExtraDiviceTypeAndroid = 2,
  TmMessageExtraDiviceTypeMac = 3,
};


SWIFT_CLASS("_TtC5IMSdk16TmMessageManager")
@interface TmMessageManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) TmMessageManager * _Nonnull default_;)
+ (TmMessageManager * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TmMessage *> * _Nonnull)loadMoreMessagesWithChatId:(NSString * _Nullable)chatId lastId:(NSInteger)lastId messageCount:(NSInteger)messageCount SWIFT_WARN_UNUSED_RESULT;
- (NSArray<TmMessage *> * _Nullable)getMessagesWithMids:(NSArray<NSString *> * _Nonnull)mids SWIFT_WARN_UNUSED_RESULT;
- (void)retractMessagesWithMids:(NSArray<NSString *> * _Nonnull)mids;
- (void)deleteMessagesWithMids:(NSArray<NSString *> * _Nonnull)mids;
- (NSInteger)getConversationUnReadCountWithChatId:(NSString * _Nonnull)chatId SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTotalUnread SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSNumber *> * _Nonnull)getAtStatusWithChatsWithChatIds:(NSArray<NSString *> * _Nonnull)chatIds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk10TmUserInfo")
@interface TmUserInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable avatar;
@property (nonatomic, strong) AvatarModel * _Nullable avatarInfo;
@property (nonatomic, copy) NSString * _Nonnull aUid;
- (BOOL)localHaveInfo SWIFT_WARN_UNUSED_RESULT;
- (BOOL)haveAuid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk13TmUserManager")
@interface TmUserManager : NSObject
+ (TmUserInfo * _Nullable)getUserInfoWithUid:(NSString * _Nonnull)uid SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<TmUserInfo *> * _Nonnull)getUserInfosWithUids:(NSArray<NSString *> * _Nonnull)uids SWIFT_WARN_UNUSED_RESULT;
+ (void)refreshUserInfosListWithUids:(NSArray<NSString *> * _Nonnull)uids;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface UIDevice (SWIFT_EXTENSION(IMSdk))
/// UIDevice Width
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_Width;)
+ (CGFloat)YH_Width SWIFT_WARN_UNUSED_RESULT;
/// UIDevice Height
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_Height;)
+ (CGFloat)YH_Height SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull YHMachineName;)
+ (NSString * _Nonnull)YHMachineName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)YHBasicDeviceInfo SWIFT_WARN_UNUSED_RESULT;
/// Whether it is a bangs screen phone (compatible with all iPhones)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL YH_Is_Fringe;)
+ (BOOL)YH_Is_Fringe SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_Nav_Height;)
+ (CGFloat)YH_Nav_Height SWIFT_WARN_UNUSED_RESULT;
/// Liu Hai height (in fact, the height of StatusBar, compatible with all iPhones)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_Fringe_Height;)
+ (CGFloat)YH_Fringe_Height SWIFT_WARN_UNUSED_RESULT;
/// Is there a virtual Home button (compatible with all iPhones)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL YH_Is_HomeIndicator;)
+ (BOOL)YH_Is_HomeIndicator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_Tabbar_Height;)
+ (CGFloat)YH_Tabbar_Height SWIFT_WARN_UNUSED_RESULT;
/// Virtual Home button height (compatible with all iPhones)
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat YH_HomeIndicator_Height;)
+ (CGFloat)YH_HomeIndicator_Height SWIFT_WARN_UNUSED_RESULT;
/// Is the simulator iPhone X
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL YH_SimulatorIsiPhoneX;)
+ (BOOL)YH_SimulatorIsiPhoneX SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(IMSdk))
+ (UIImage * _Nullable)sdk_bundleImageWithImageName:(NSString * _Nonnull)imageName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5IMSdk14UnReadNumEvent")
@interface UnReadNumEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull chatIds;
@property (nonatomic) NSInteger unReadNum;
+ (void)sendWithChatIds:(NSArray<NSString *> * _Nonnull)chatIds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk9UserEvent")
@interface UserEvent : NSObject <TMEvent>
- (NSArray<NSString *> * _Nonnull)getData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull uids;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5IMSdk13UserInfoModel")
@interface UserInfoModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk11UserProfile")
@interface UserProfile : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5IMSdk11YHGenerated")
@interface YHGenerated : NSObject
+ (void)openIphoneSettings;
+ (void)openAppStoreWith:(NSString * _Nonnull)appID;
+ (void)openAppStoreReviewWith:(NSString * _Nonnull)appID;
+ (void)makeCallWith:(NSString * _Nonnull)tel;
/// Open Safari
/// \param url url
///
/// \param autoCorrect Whether to automatically correct the url, such as adding http://
///
+ (void)openSafariWith:(NSString * _Nonnull)url autoCorrect:(BOOL)autoCorrect;
+ (NSData * _Nullable)getLocalJSONFileWithFile:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)getLocalPlistFileWithFile:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface YHGenerated (SWIFT_EXTENSION(IMSdk))
+ (NSString * _Nonnull)fileSizeWithLength:(NSInteger)length SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC5IMSdk8YHLogger")
@interface YHLogger : NSObject
/// 兼容OC的日志打印
/// \param message message
///
+ (void)logWithMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
